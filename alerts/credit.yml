groups:

###################################################################
# CREDIT
###################################################################

  - name: CREDIT
    rules:

    - alert: CreditContainersRestart
      expr: sum(increase(kube_pod_container_status_restarts_total { namespace =~ "^credit-.*$" } [10m]) > 0) by (origin_prometheus, namespace, pod)
      for: 30s
      labels:
        severity: high
      annotations:
        summary: 'Warning! Pod {{$labels.pod}} {{$labels.namespace}}  was restarted too frequently (during past 10 min)'
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}

    - alert: CreditPodCPUusage
      expr: (sum(rate(container_cpu_usage_seconds_total{container!~"POD|", namespace =~ "^credit-.*$"}[5m])) by(origin_prometheus, namespace, pod)) / (sum(kube_pod_container_resource_requests{resource="cpu", namespace =~ "^credit-.*$"}) by(origin_prometheus, namespace, pod)) > 3
      for: 30s
      labels:
        severity: normal
      annotations:
        summary: 'Pod {{ $labels.pod }} is consuming {{ $value | printf "%.2f"}} times more CPU (in 5 min) than the value of CPU requests'
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}

    - alert: CreditPodMEMORYusage
      expr: (sum(container_memory_working_set_bytes{container!="", container!="POD", namespace =~ "^credit-.*$"}) by(origin_prometheus, namespace, pod)) / (sum(kube_pod_container_resource_limits{resource="memory", namespace =~ "^credit-.*$"}) by(origin_prometheus, namespace, pod)) > 0.9
      for: 30s
      labels:
        severity: normal
      annotations:
        summary: 'Pod {{ $labels.pod }} uses more than 90% limit of memory: {{ $value | printf "%.2f"}} '
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}

    - alert: CreditProdPodWaiting
      expr: sum(kube_pod_container_status_waiting_reason {reason=~"CrashLoopBackOff|ErrImagePull|CreateContainerConfigError|ImagePullBackOff", namespace="credit-prod"}) by (pod, reason) >= 1
      for: 30s
      labels:
        severity: high
      annotations:
        summary: 'POD {{$labels.pod}} waiting status is  {{$labels.reason}}.'

    - alert: CreditProdPodNotReady
      expr: sum(kube_pod_status_ready { condition = "true", pod !~ ".+-deploy", namespace="credit-prod", deployconfig !~ ".*notification.*"}  == 0) by (origin_prometheus, namespace, pod)
      for: 30s
      labels:
        severity: panic
      annotations:
        summary: 'POD {{$labels.pod}} not ready.'
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}

    - alert: CreditContainerOomKiller
      expr: ( kube_pod_container_status_restarts_total {namespace =~ "^credit-.*$"} - kube_pod_container_status_restarts_total {namespace =~ "^credit-.*$"} offset 10m >= 1) and ignoring (reason) min_over_time ( kube_pod_container_status_last_terminated_reason {namespace =~ "^credit-.*$", reason="OOMKilled"}[10m]) == 1
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes container oom killer (instance {{ $labels.instance }})
        description: 'Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}'
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}

    - alert: CreditDeploymentReplicasMismatch
      expr: kube_deployment_spec_replicas {namespace =~ "^credit-.*$"} != kube_deployment_status_replicas_available {namespace =~ "^credit-.*$"}
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: Kubernetes Deployment replicas mismatch (instance {{ $labels.instance }})
        description: 'Deployment Replicas mismatch\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}'
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}

    - alert: CreditOpenShiftQuotaMemoryLimit
      expr: (sum(kube_resourcequota{resource="limits.memory", type="used" , namespace =~ "^credit-.*$"}) by (namespace) ) / (sum (kube_resourcequota{resource="limits.memory", type="hard" , namespace =~ "^credit-.*$"}) by (namespace) ) *100 > 90
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: 'Low OpenShift memory (limits) resource quota  in {{ $labels.namespace }}, current usage above 90%. Value: {{ $value | printf "%.2f"}} '
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}
        
    - alert: CreditOpenShiftQuotaMemoryRequest
      expr: (sum(kube_resourcequota{resource="requests.memory", type="used" , namespace =~ "^credit-.*$"}) by (namespace) ) / (sum(kube_resourcequota{resource="requests.memory", type="hard" , namespace =~ "^credit-.*$"}) by (namespace) ) *100 > 90
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: 'Low OpenShift memory (requests) resource quota in {{ $labels.namespace }}, current usage above 90%. Value: {{ $value | printf "%.2f"}} '
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}

    - alert: CreditOpenShiftQuotaCPURequest
      expr: (sum (kube_resourcequota{resource="requests.cpu", type="used" , namespace =~ "^credit-.*$"}) by (namespace) ) / (sum (kube_resourcequota{resource="requests.cpu", type="hard" , namespace =~ "^credit-.*$"}) by (namespace) ) *100 > 90
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: 'Low OpenShift CPU (requests) resource quota, current usage above 90%. Value: {{ $value | printf "%.2f"}} '
        timestamp: >
          {{ with query "time()+10800" }}{{ . | first | value | humanizeTimestamp | printf "%.19s UTC+3"}}{{ end }}